#include <stdio.h>

void quicksort(int a[],int low,int high)
{ 
    int partitionindex;
    if(low<high)
{
     partitionindex = partition(a,low,high);
    quicksort(a,low,partitionindex-1);
    quicksort(a,partitionindex+1,high);
}
}

int partition(int a[],int low,int high)
{    int temp;
    int pivot = a[low];
    int i = low+1;
    int j = high;
    do{
    while(a[i]<=pivot)
    {
        i++;
    }
    while(a[j]>pivot)
    {
        j--;
    }
    if(i<j)
    {
     temp = a[i];
     a[i] = a[j];
     a[j] = temp;
    }
    }while(i<j);
  
        temp = a[low];
        a[low] = a[j];
        a[j] = temp;
        
        return j;
    
}

void printarray(int a[],int n)
{
    for(int i=0;i<n;i++)
   {
   printf("%d",a[i]);
   }
}


int main() {
   int n,i;
   printf("enter n");
   scanf("%d",&n);
   int a[n];
   printf("enter elements");
   
   for(i=0;i<n;i++)
   {
   scanf("%d",&a[i]);
   }
    printarray(a,n);
   quicksort(a,0,n-1);
   printf("\n");
   printarray(a,n);
    return 0;
}

output:
enter n5
enter elements1 7 6 3 4
17634
13467