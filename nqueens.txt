//Name-Devashish Rahate
//SYITB105
//	Assignment No:8


#include <iostream>
using namespace std;

void printSolution(int board[][10], int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << board[i][j] << "  ";
        }
        cout << endl;
    }
}

bool isSafe(int board[][10], int row, int col, int n) {
    int i, j;

    for (i = 0; i < col; i++) {
        if (board[row][i])
            return false;
    }


    for (i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j])
            return false;
    }


    for (i = row, j = col; j >= 0 && i < n; i++, j--) {
        if (board[i][j])
            return false;
    }

    return true;
}

bool NQ(int board[][10], int col, int n) {

    if (col >= n) {
        return true;
    }


    for (int i = 0; i < n; i++) {

        if (isSafe(board, i, col, n)) {
            
            board[i][col] = 1;

            
            if (NQ(board, col + 1, n)) {
                return true;
            }

            
            board[i][col] = 0; 
        }
    }

    
    return false;
}

bool solveNQ(int n) {
    int board[10][10] = {0}; 

    
    if (NQ(board, 0, n)) {
        printSolution(board, n);
        return true;
    } else {
        return false;
    }
}

int main() {
    int n;
    cout << "Enter the size of the chessboard (n x n): ";
    cin >> n;

    
    if (solveNQ(n)) {
        cout << "Solution found!" << endl;
    } else {
        cout << "No solution exists for this board size." << endl;
    }

    return 0;
}


output-

/tmp/g9VZxRdy3R.o
Enter the size of the chessboard (n x n): 4
0  0  1  0  
1  0  0  0  
0  0  0  1  
0  1  0  0  
Solution found!


=== Code Execution Successful ===
